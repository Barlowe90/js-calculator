{"version":3,"sources":["Components/NumberProvider/NumberProvider.js","Components/BackButton/index.js","Components/BackButton/BackButton.js","Components/NumberButton/index.js","Components/NumberButton/NumberButton.js","Components/FunctionButton/index.js","Components/FunctionButton/FunctionButton.js","Components/ClearButton/index.js","Components/ClearButton/ClearButton.js","Styles/Styles.js","Components/Display/index.js","Components/Display/Display.js","Components/EqualButton/index.js","Components/EqualButton/EqualButton.js","Components/NegativeButton/index.js","Components/NegativeButton/NegativeButton.js","Components/Calculator/index.js","Components/Calculator/Calculator.js","Components/NumberProvider/index.js","App.js","reportWebVitals.js","index.js"],"names":["NumberContext","React","createContext","NumberProvider","props","useState","number","setNumber","numberStored","setNumberStored","functionType","setFunctionType","handleStoredValue","Provider","value","handleSetDisplayValue","num","includes","replace","handleClearValue","handleBackButton","deletedNumber","slice","length","handleSetCalcFunction","type","handleToggleNegative","positiveNumber","doMath","Math","round","parseFloat","children","BackButton","useContext","onClick","NumberButton","buttonValue","id","FunctionButton","ClearButton","className","CalculatorStyles","styled","div","DisplayStyles","Display","undefined","EqualButton","NegativeButton","Calculator","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.431f87cd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport const NumberContext = React.createContext();\n\nconst NumberProvider = (props) => {\n  const [number, setNumber] = useState(\"0\");\n  const [numberStored, setNumberStored] = useState(\"\");\n  const [functionType, setFunctionType] = useState(\"\");\n\n  const handleSetDisplayValue = (num) => {\n    if (!number.includes(\".\") || num !== \".\") {\n      setNumber(`${(number + num).replace(/^0+/, \"\")}`);\n    }\n  };\n\n  const handleStoredValue = () => {\n    setNumberStored(number);\n    setNumber(\"\");\n  };\n\n  const handleClearValue = () => {\n    setNumber(\"0\");\n    setNumberStored(\"\");\n  };\n\n  const handleBackButton = () => {\n    if (number !== \"\") {\n      const deletedNumber = number.slice(0, number.length - 1);\n      setNumber(deletedNumber);\n    }\n  };\n\n  const handleSetCalcFunction = (type) => {\n    if (number) {\n      setFunctionType(type);\n      handleStoredValue();\n    }\n    if (numberStored) {\n      setFunctionType(type);\n    }\n  };\n\n  const handleToggleNegative = () => {\n    if (number) {\n      if (number > 0) {\n        setNumber(`-${number}`);\n      } else {\n        const positiveNumber = number.slice(1);\n        setNumber(positiveNumber);\n      }\n    } else if (numberStored > 0) {\n      setNumberStored(`-${numberStored}`);\n    } else {\n      const positiveNumber = numberStored.slice(1);\n      setNumberStored(positiveNumber);\n    }\n  };\n\n  const doMath = () => {\n    if (number && numberStored) {\n      switch (functionType) {\n        case \"+\":\n          setNumberStored(\n            `${\n              Math.round(\n                `${(parseFloat(numberStored) + parseFloat(number)) * 100}`\n              ) / 100\n            }`\n          );\n          break;\n        case \"-\":\n          setNumberStored(\n            `${\n              Math.round(\n                `${(parseFloat(numberStored) - parseFloat(number)) * 1000}`\n              ) / 1000\n            }`\n          );\n          break;\n        case \"/\":\n          setNumberStored(\n            `${\n              Math.round(\n                `${(parseFloat(numberStored) / parseFloat(number)) * 10000}`\n              ) / 10000\n            }`\n          );\n          break;\n        case \"*\":\n          setNumberStored(\n            `${\n              Math.round(\n                `${parseFloat(numberStored) * parseFloat(number) * 1000}`\n              ) / 1000\n            }`\n          );\n          break;\n        default:\n          break;\n      }\n      setNumber(\"\");\n    }\n  };\n\n  return (\n    <NumberContext.Provider\n      value={{\n        functionType,\n        handleSetDisplayValue,\n        handleStoredValue,\n        handleClearValue,\n        handleBackButton,\n        handleSetCalcFunction,\n        handleToggleNegative,\n        doMath,\n        number,\n        numberStored,\n        setNumber,\n      }}\n    >\n      {props.children}\n    </NumberContext.Provider>\n  );\n};\n\nexport default NumberProvider;\n","import BackButton from \"./BackButton\";\n\nexport default BackButton;\n","import { useContext } from \"react\";\nimport { NumberContext } from \"../NumberProvider/NumberProvider\";\n\nexport default function BackButton() {\n  const { handleBackButton } = useContext(NumberContext);\n  return (\n    <button type=\"button\" onClick={() => handleBackButton()}>\n      &#8592;\n    </button>\n  );\n}\n","import NumberButton from \"./NumberButton\";\n\nexport default NumberButton;\n","import { useContext } from \"react\";\nimport { NumberContext } from \"../NumberProvider/NumberProvider\";\n\nexport default function NumberButton({ buttonValue, id }) {\n  const { handleSetDisplayValue } = useContext(NumberContext);\n\n  return (\n    <button\n      type=\"button\"\n      id={id}\n      onClick={() => handleSetDisplayValue(buttonValue)}\n    >\n      {buttonValue}\n    </button>\n  );\n}\n","import FunctionButton from \"./FunctionButton\";\n\nexport default FunctionButton;\n","import React, { useContext } from \"react\";\nimport { NumberContext } from \"../NumberProvider/NumberProvider\";\n\nexport default function FunctionButton({ buttonValue, id }) {\n  const { handleSetCalcFunction } = useContext(NumberContext);\n  return (\n    <button\n      type=\"button\"\n      id={id}\n      onClick={() => handleSetCalcFunction(buttonValue)}\n    >\n      {buttonValue}\n    </button>\n  );\n}\n","import ClearButton from \"./ClearButton\";\n\nexport default ClearButton;\n","import { useContext } from \"react\";\nimport { NumberContext } from \"../NumberProvider/NumberProvider\";\n\nexport default function ClearButton() {\n  const { handleClearValue } = useContext(NumberContext);\n  return (\n    <button\n      type=\"button\"\n      className=\"white-button\"\n      id=\"clear\"\n      onClick={() => handleClearValue()}\n    >\n      C\n    </button>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const CalculatorStyles = styled.div`\n  background-color: #white;\n  max-width: 100%;\n  height: 100vh;\n  display: grid;\n  justify-items: center;\n  grid-template-areas:\n    \"display\"\n    \"numbers\";\n  button {\n    width: 100%;\n    height: 80px;\n    border-radius: 20px;\n    border: 3px solid black;\n    font-size: 2rem;\n    color: white;\n    font-family: \"Orbitron\", serif;\n    background: #888888;\n    &:focus {\n      outline: none;\n    }\n  }\n  .display {\n    font-family: \"Orbitron\", serif;\n    font-weight: 700;\n    grid-area: display;\n    h1 {\n      font-size: 4rem;\n      color: black;\n      text-align: center;\n      margin: 40px 0;\n    }\n  }\n  .number-pad {\n    grid-area: numbers;\n    display: grid;\n    grid-gap: 10px;\n    grid-template-columns: repeat(4, 1fr);\n    padding: 0px 0px 30px;\n    width: 450px;\n    .button-div:focus {\n      outline: none;\n    }\n  }\n  .zero-button {\n    grid-column: 1/3;\n  }\n`;\n\nexport const DisplayStyles = styled.div`\n  display: grid;\n  grid-template-rows: 90px 50px;\n  grid-template-columns: 1fr;\n  border: 4px solid white;\n  margin: 10px;\n  width: 700px;\n  align-items: center;\n  border-radius: 20px;\n  background: #e17055;\n  h2,\n  p {\n    text-align: center;\n    color: white;\n  }\n  h2 {\n    font-size: 2rem;\n    margin: 0;\n    text-align: right;\n    padding: 0px;\n    border-bottom: 4px solid white;\n    padding: 15px 20px;\n  }\n  p {\n    margin: 5px 0;\n  }\n`;\n","import Display from \"./Display\";\n\nexport default Display;\n","import React, { useContext } from \"react\";\nimport { DisplayStyles } from \"../../Styles/Styles\";\nimport { NumberContext } from \"../NumberProvider/NumberProvider\";\n\nexport default function Display() {\n  const { number, numberStored } = useContext(NumberContext);\n  return (\n    <DisplayStyles>\n      <div id=\"display\">\n        <h2\n          className={\n            numberStored && numberStored.length > 12\n              ? \"long-main-display\"\n              : undefined\n          }\n        >\n          {!number.length && !numberStored ? \"0\" : number || numberStored}\n        </h2>\n      </div>\n    </DisplayStyles>\n  );\n}\n","import EqualButton from \"./EqualButton\";\n\nexport default EqualButton;\n","import React, { useContext } from \"react\";\nimport { NumberContext } from \"../NumberProvider/NumberProvider\";\n\nexport default function EqualButton() {\n  const { doMath } = useContext(NumberContext);\n  return (\n    <button type=\"button\" id=\"equals\" onClick={() => doMath()}>\n      =\n    </button>\n  );\n}\n","import NegativeButton from \"./NegativeButton\";\n\nexport default NegativeButton;\n","import React, { useContext } from \"react\";\nimport { NumberContext } from \"../NumberProvider/NumberProvider\";\n\nexport default function NegativeButton() {\n  const { handleToggleNegative } = useContext(NumberContext);\n\n  return (\n    <button type=\"button\" onClick={() => handleToggleNegative()}>\n      -/+\n    </button>\n  );\n}\n","import Calculator from \"./Calculator\";\n\nexport default Calculator;\n","import React from \"react\";\nimport NumberButton from \"../NumberButton\";\nimport FunctionButton from \"../FunctionButton\";\nimport ClearButton from \"../ClearButton\";\nimport Display from \"../Display\";\nimport EqualButton from \"../EqualButton\";\nimport BackButton from \"../BackButton\";\nimport NegativeButton from \"../NegativeButton\";\nimport { CalculatorStyles } from \"../../Styles/Styles\";\n\nexport default function Calculator() {\n  return (\n    <CalculatorStyles>\n      <div className=\"display\">\n        <h1>JS Calculator - React hooks</h1>\n        <Display />\n      </div>\n      <div className=\"number-pad\">\n        <ClearButton />\n        <BackButton />\n        <NegativeButton />\n        <FunctionButton buttonValue=\"/\" id=\"divide\" />\n        <NumberButton buttonValue={7} id=\"seven\" />\n        <NumberButton buttonValue={8} id=\"eight\" />\n        <NumberButton buttonValue={9} id=\"nine\" />\n        <FunctionButton buttonValue=\"*\" id=\"multiply\" />\n        <NumberButton buttonValue={4} id=\"four\" />\n        <NumberButton buttonValue={5} id=\"five\" />\n        <NumberButton buttonValue={6} id=\"six\" />\n        <FunctionButton buttonValue=\"-\" id=\"subtract\" />\n        <NumberButton buttonValue={1} id=\"one\" />\n        <NumberButton buttonValue={2} id=\"two\" />\n        <NumberButton buttonValue={3} id=\"three\" />\n        <FunctionButton buttonValue=\"+\" id=\"add\" />\n        <div className=\"zero-button\">\n          <NumberButton buttonValue={0} id=\"zero\" />\n        </div>\n        <NumberButton buttonValue=\".\" id=\"decimal\" />\n        <EqualButton />\n      </div>\n    </CalculatorStyles>\n  );\n}\n","import NumberProvider from \"./NumberProvider\";\n\nexport default NumberProvider;\n","import React from \"react\";\nimport { Calculator } from \"./Components\";\nimport NumberProvider from \"./Components/NumberProvider\";\n\nfunction App() {\n  return (\n    <NumberProvider>\n      <Calculator />\n    </NumberProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}